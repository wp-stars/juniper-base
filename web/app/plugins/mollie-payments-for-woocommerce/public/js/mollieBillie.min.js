/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/wooCheckoutFieldsUtility.js":
/*!**************************************************!*\
  !*** ./resources/js/wooCheckoutFieldsUtility.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   maybeRequireField: () => (/* binding */ maybeRequireField),
/* harmony export */   saveOriginalField: () => (/* binding */ saveOriginalField)
/* harmony export */ });
function usingGateway(gateway) {
  return jQuery('form[name="checkout"] input[name="payment_method"]:checked').val() === gateway;
}
function showField(positionField, fieldMarkup) {
  jQuery(positionField).find('label[for^="payment_method_mollie_wc_gateway"]').after(fieldMarkup);
}
function requireField(inputName, fieldId) {
  jQuery('form[name="checkout"] input[name=' + inputName + ']').attr('required', '');
  jQuery('form[name="checkout"] p#' + fieldId).addClass('validate-required');
  jQuery('form[name="checkout"] p#' + fieldId + ' label span').replaceWith('<abbr class="required" title="required">*</abbr>');
}
function removeField(fieldId) {
  jQuery('form[name="checkout"] p#' + fieldId).remove();
}
function unrequireField(inputName, fieldId) {
  jQuery('form[name="checkout"] input[name=' + inputName + ']').removeAttr('required');
  jQuery('form[name="checkout"] p#' + fieldId).removeClass('validate-required');
  jQuery('form[name="checkout"] p#' + fieldId + ' label abbr').replaceWith('<span class="optional">(optional)</span>');
}
function restoreOriginalField(billingField, positionField, fieldMarkup, inputName, fieldId, originalField) {
  var field = jQuery('form[name="checkout"] input[name=' + inputName + ']');
  var currentVisibility = field.is(':visible');
  var currentRequired = field.prop('required');
  if (currentVisibility !== originalField.isVisible) {
    if (originalField.isVisible) {
      showField(positionField, fieldMarkup);
    } else {
      removeField(fieldId);
    }
  }
  if (currentRequired !== originalField.isRequired) {
    if (originalField.isRequired) {
      requireField(inputName, fieldId);
    } else {
      unrequireField(inputName, fieldId);
    }
  }
}
function saveOriginalField(inputName, originalField) {
  var field = jQuery('form[name="checkout"] input[name=' + inputName + ']').closest('p');
  var isVisible = field.is(':visible');
  var isRequired = field.prop('required') || field.hasClass('validate-required');
  originalField = {
    isVisible: isVisible,
    isRequired: isRequired
  };
  return originalField;
}
function maybeRequireField(field, positionField, fieldMarkup, inputName, fieldId, originalField, gateway) {
  if (usingGateway(gateway)) {
    var _field = jQuery("#" + inputName);
    if (!originalField.isVisible && _field.length === 0) {
      showField(positionField, fieldMarkup);
      requireField(inputName, fieldId);
      return jQuery('form[name="checkout"] p#' + fieldId);
    }
    if (!originalField.isRequired) {
      requireField(inputName, fieldId);
      return jQuery('form[name="checkout"] p#' + fieldId);
    }
  } else {
    restoreOriginalField(field, positionField, fieldMarkup, inputName, fieldId, originalField);
    return false;
  }
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**************************************!*\
  !*** ./resources/js/mollieBillie.js ***!
  \**************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wooCheckoutFieldsUtility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wooCheckoutFieldsUtility */ "./resources/js/wooCheckoutFieldsUtility.js");

(function (_ref) {
  var jQuery = _ref.jQuery;
  var gateway = 'mollie_wc_gateway_billie';
  var inputCompanyName = 'billing_company';
  var originalBillingCompanyField = (0,_wooCheckoutFieldsUtility__WEBPACK_IMPORTED_MODULE_0__.saveOriginalField)(inputCompanyName, {});
  var companyFieldId = 'billing_company_field';
  var companyField = jQuery('form[name="checkout"] p#billing_company_field');
  var positionCompanyField = 'li.wc_payment_method.payment_method_mollie_wc_gateway_billie';
  var companyMarkup = '<p class="form-row form-row-wide" id="billing_company_field" data-priority="30">' + '<label for="billing_company" class="">Company name&nbsp;' + '<abbr className="required" title="required">*</abbr>' + '</label>' + '<span class="woocommerce-input-wrapper">' + '<input type="text" class="input-text " name="billing_company" id="billing_company" placeholder="" value="" autocomplete="organization">' + '</span>' + '</p>';
  jQuery(function () {
    jQuery('body').on('updated_checkout payment_method_selected', function () {
      companyField = (0,_wooCheckoutFieldsUtility__WEBPACK_IMPORTED_MODULE_0__.maybeRequireField)(companyField, positionCompanyField, companyMarkup, inputCompanyName, companyFieldId, originalBillingCompanyField, gateway);
    });
  });
})(window);
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,